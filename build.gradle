plugins {
    id 'com.github.johnrengelman.shadow' version '5.1.0'
    id 'java'
    id 'application'
    id 'maven-publish'
    id 'com.novoda.build-properties' version '0.4.1'
}

buildProperties {
    secrets {
        using project.file('secrets.properties')
    }
    env {
        using System.getenv()
    }
}

group = 'fr.raksrinana'
description = 'NameAsCreated'
sourceCompatibility = targetCompatibility = JavaVersion.VERSION_12

ext.moduleName = project.moduleName
mainClassName = project.mainClass

dependencies {
    implementation("org.slf4j:slf4j-api:${project.slf4j_version}")
    implementation("ch.qos.logback:logback-classic:${project.logback_version}")
    implementation("fr.mrcraftcod:utils.http:${project.raksrinana_utils_version}")
    implementation("com.google.code.findbugs:jsr305:${project.jsr305_version}")

    implementation("com.drewnoakes:metadata-extractor:${project.metadata_extractor_version}")
    implementation("us.fatehi:pointlocation6709:${project.pointlocation6709_version}")

    implementation("com.beust:jcommander:${project.jcommander_version}")
}

repositories {
    maven {
        url = 'https://repo.maven.apache.org/maven2'
    }
    maven {
        url = 'https://jcenter.bintray.com'
    }
    maven {
        url = 'https://maven.mrcraftcod.fr'
    }
}

import org.apache.tools.ant.filters.ReplaceTokens

processResources {
    from 'src/main/resources'
    filter(ReplaceTokens, tokens: [project_version: project.version, project_name: project.name])
}

compileJava {
    inputs.property("moduleName", moduleName)
    doFirst {
        options.compilerArgs = [
                '--module-path', classpath.asPath,
        ]
        classpath = files()
    }
}

jar {
    manifest {
        attributes 'Main-Class': project.mainClass
    }
}

shadowJar {
    baseName = project.name
    classifier = 'shaded'
    version = null
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = project.group
            artifactId = project.name
            version = project.version

            from components.java
        }
    }
    repositories {
        maven {
            url = buildProperties.env['MAVEN_HOST'].or(buildProperties.secrets['MAVEN_HOST']).string
            credentials {
                username = buildProperties.env['MAVEN_USER'].or(buildProperties.secrets['MAVEN_USER']).string
                password = buildProperties.env['MAVEN_PASSWORD'].or(buildProperties.secrets['MAVEN_PASSWORD']).string
            }
        }
    }
}
